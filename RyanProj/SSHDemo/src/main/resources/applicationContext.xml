<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.0.xsd"
        >

    <context:annotation-config/>
    <context:component-scan base-package="com.hyron.alarmcenter"/>
    <context:property-placeholder ignore-unresolvable="true" location="classpath:global.properties" />
    <context:property-placeholder ignore-unresolvable="true" location="classpath:activemq.properties" />

    <util:properties id="config" location="classpath:global.properties"/>

    <!-- loading dbConfig -->
    <import resource="classpath:datasource.xml"/>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
            </props>
        </property>
        <property name="packagesToScan">
            <array>
                <value>com.hyron.alarmcenter</value>
            </array>
        </property>
    </bean>

    <!-- 支持  @Transactional 标记 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!-- 配置Hibernate事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- 配置事务异常封装 -->
    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

    <!-- ActiveMQ-->
    <bean id="activeMQConnectConfig" class="com.hyron.commons.mq.ActiveMQConnectConfig">
        <property name="bPersistent" value="${activemq.persistent}"/>
        <property name="perBatchNum" value="${activemq.commitnumper}"/>
        <property name="username" value="${activemq.username}"/>
        <property name="password" value="${activemq.password}"/>
        <property name="brokerUrl" value="${activemq.brokenurl}"/>
    </bean>
    <bean id="activeMQConnectFactory" class="com.hyron.commons.mq.ActiveMQConnectFactory" init-method="connect"
          destroy-method="disconnect">
        <property name="activeMQConnectConfig" ref="activeMQConnectConfig"/>
    </bean>

    <!-- 接收MQ的Service-->
    <bean id="alarmMQService" class="com.hyron.alarmcenter.mq.impl.AlarmMQService" destroy-method="disconnect">
        <property name="queueNameByReceive" value="${activemq.queuenameByReceive}"/>
        <property name="receiveThreadNum" value="${activemq.receiveThreadPoolsCount}"/>
    </bean>

    <!-- 本地系统服务-->
    <bean id="processingService" class="com.hyron.commons.service.ProcessServer" init-method="init">
        <property name="serviceMap">
            <map>
                <entry key="alarmMQService" value-ref="alarmMQService"/>
            </map>
        </property>
    </bean>
</beans>